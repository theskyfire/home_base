##############################################################################
# Stage Template
##############################################################################
include $(GUARD)
include $(END_GUARD)

##############################################################################
# Set STAGE, after END_GUARD THIS_MAKEFILE == Including Makefile
STAGE			:=$(patsubst %.mk,%,$(notdir $(THIS_MAKEFILE)))

##############################################################################
# Create Command Sequence

# CMD = $(ENV) $(PROG) $(ARG) $(REDIR)
$(STAGE)_CMD_PRE	 =
$(STAGE)_CMD		 =$($(STAGE)_ENV_SEQ)
$(STAGE)_CMD		+=$($(STAGE)_PROG_SEQ)
$(STAGE)_CMD		+=$($(STAGE)_ARG_SEQ)
$(STAGE)_CMD		+=$($(STAGE)_REDIR_SEQ)
$(STAGE)_CMD_POST	 =

# CMD_SEQ = $(CMD_PRE) $(CMD) $(CMD_POST)
$(STAGE)_CMD_SEQ	 =$($(STAGE)_CMD_PRE)
$(STAGE)_CMD_SEQ	+=$($(STAGE)_CMD)
$(STAGE)_CMD_SEQ	+=$($(STAGE)_CMD_POST)

$(STAGE)_ENV_PRE	 =
$(STAGE)_ENV		 =
$(STAGE)_ENV_POST	 =
$(STAGE)_ENV_SEQ	 =$($(STAGE)_ENV_PRE)
$(STAGE)_ENV_SEQ	+=$($(STAGE)_ENV)
$(STAGE)_ENV_SEQ	+=$($(STAGE)_ENV_POST)

$(STAGE)_PROG_PRE	 =
$(STAGE)_PROG		 =
$(STAGE)_PROG_POST	 =
$(STAGE)_PROG_SEQ	 =$($(STAGE)_PROG_PRE)
$(STAGE)_PROG_SEQ	+=$($(STAGE)_PROG)
$(STAGE)_PROG_SEQ	+=$($(STAGE)_PROG_POST)

$(STAGE)_ARG_PRE	 =
$(STAGE)_ARG		 =
$(STAGE)_ARG_POST	 =
$(STAGE)_ARG_SEQ	 =$($(STAGE)_ARG_PRE)
$(STAGE)_ARG_SEQ	+=$($(STAGE)_ARG)
$(STAGE)_ARG_SEQ	+=$($(STAGE)_ARG_POST)

$(STAGE)_REDIR_PRE	 =
$(STAGE)_REDIR		 =
$(STAGE)_REDIR_POST	 =
$(STAGE)_REDIR_SEQ	 =$($(STAGE)_REDIR_PRE)
$(STAGE)_REDIR_SEQ	+=$($(STAGE)_REDIR)
$(STAGE)_REDIR_SEQ	+=$($(STAGE)_REDIR_POST)

define CMD =
{
	trap "mv '$$(@)' '$$(@).err'" ERR ;
	cd '$$($(STAGE)_PATH)' ||: ;
	echo '$$($(STAGE)_CMD_SEQ)' ;
} |& tee '$$(@)'
endef

##############################################################################

# 'stage' will call 'stage(X)' for every project
.PHONY: $(STAGE)

$(foreach PRJ,$(PRJS),\
	$(eval .PHONY: $(STAGE)($(PRJ)))\
	$(eval $(STAGE): $(STAGE)($(PRJ)))\
	$(eval $(STAGE)($(PRJ)): STAGE:=$(STAGE))\
	$(eval $(STAGE)($(PRJ)): PRJ:=$(PRJ))\
	$(eval $(STAGE)($(PRJ)): $($(STAGE)_$(PRJ)))\
)

.PRECIOUS: $(BUILD_DIR)/$(STAGE).%.log
$(BUILD_DIR)/$(STAGE).%.log: | $(BUILD_DIR) $$($(STAGE)_PATH)
	{
		trap "mv '$(@)' '$(@).err'" ERR ;
		cd '$($(STAGE)_PATH)' ;
		$($(STAGE)_CMD_SEQ) ;
	} |& tee '$(@)'

##############################################################################
# vim: set syntax=make:
