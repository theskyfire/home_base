##############################################################################

export LES_USER="${USER}"
: ${LES_USER:=${USERNAME}}
: ${LES_USER:=$(whoami)}
export LES_HOME="${HOME}"
: ${LES_HOME:=~}
export LES_USER LES_HOME
export LES_LOCAL="${LES_HOME}/local"
export LES_BIN="${LES_LOCAL}/bin"
export LES_CONF="${LES_LOCAL}/conf"
export LES_LOG="${LES_LOCAL}/log"

export LES_PATH="${LES_BIN}:${PATH}"
export PATH="${LES_PATH}"

export LES_INPUTRC="${LES_CONF}/inputrc"
export INPUTRC="${LES_INPUTRC}"

export LES_BASH="${LES_BIN}/bash"
export LES_BASHRC="${LES_CONF}/bashrc"
export LES_SHELL="${LES_BASH}"
export SHELL="${LES_SHELL}"

export LES_PAGER="less"
export PAGER="${LES_PAGER}"

export LES_VIM="${LES_BIN}/vim"
export LES_VIMRC="${LES_CONF}/vimrc"
export LES_EDITOR="${LES_VIM}"
export EDITOR="${LES_EDITOR}"

export MANPATH="${LES_SHARE}/man:${MANPATH}"

##############################################################################
unset CDPATH
#BASH_ENV
#ENV
#FCEDIT
#FIGNORE
#FUNCNEST
#GLOBIGNORE
#HISTCONTROL
#HISTFILE
#HISTFILESIZE
#HISTIGNORE
#HISTSIZE
#HISTTIMEFORMAT
#HOSTFILE
#IFS
#IGNOREEOF
#INPUTRC
#LANG
#MAIL
#MAILCHECK
#MAILPATH
#POSIXLY_CORRECT
#PROMPT_COMMAND
#PROMPT_DIRTRIM
#PS1 2 3 4
#TIMEFORMAT
#TMPDIR
#auto_resume
#histchars
#
##############################################################################
set +o allexport		# don't export every new/modified var/func
set -o braceexpand		# do brace expansion
set +o emacs			# don't use emacs editing
set +o errexit			# don't exit after false pipeline/subsh/brace
set +o errtrace			# don't trap ERR in func/cmd sub/subsh
set +o functrace		# don't trap DEBUG & RETURN func/cmd sub/subsh
set -o hashall			# do hash and remember command locations
set -o histexpand		# do ! history substitution
set -o history			# do command history
set +o ignoreeof		# do exit after single EOF / ^D
set -o interactive-comments	# do ignore command lines starting with #
set +o keyword			# don't export non-leading assignments
set -o monitor			# do monitor background jobs
set +o noclobber		# do overwrite existing files with redirection
set +o noexec			# do execute commands once read
set +o noglob			# do pathname expansion
set +o nolog			# Currently ignored
set +o notify			# do report terminated jobs immediately
set +o nounset			# don't error out on unset veriable dereference
set +o onecmd			# don't exit after executing one command
set +o physical			# do cd into symlink path, over physical path
set +o pipefail			# don't return rightmost non-zero status
set +o posix			# don't use strict POSIX compilance
set +o privileged		# don't use privileged mode
set +o verbose			# don't echo shell input lines as they are read
set -o vi			# do use vi editing
set +o xtrace			# don't echo expanded commands before execution
##############################################################################
shopt -u autocd			# don't use dir names as command
shopt -u cdable_vars		# don't deref non-existent dir as var to cd to
shopt -u cdspell		# don't auto-correct misspelled dir names
shopt -u checkhash		# don't check hashed command for existence
shopt -s checkjobs		# do stop exit if jobs are still running
shopt -s checkwinsize		#*do check win size after every command
shopt -s cmdhist		# do save multi-line command as single entry
shopt -u compat31		# don't use compatibality mode
shopt -u compat32		# don't use compatibality mode
shopt -u compat40		# don't use compatibality mode
shopt -u compat41		# don't use compatibality mode
shopt -u dirspell		# don't correct spelling on directory names
shopt -u dotglob		# don't use hidden files in pathname expansion
shopt -u execfail		# do exit non-interactive shell if exec fails
shopt -s expand_aliases		# do use command aliasing
shopt -u extdebug		# don't use entended debugging features
shopt -s extglob		#*don't use extended pattern matching
shopt -s extquote		# do expand $'' and $"" in ${}
shopt -u failglob		# don't error on failed pathname expansion
shopt -s force_fignore		# do force FIGNORE excludes in word completion
shopt -s globstar		#*do allow ** glob
shopt -u gnu_errfmt		# don't use gnu err format
shopt -s histappend		#*do append to HISTFILE
shopt -s histreedit		#*do allow edit of failed history substitution
shopt -s histverify		#*do show history substitution for verification
shopt -s hostcomplete		# do hostname completion on words with @
shopt -u huponexit		# don't send HUP to jobs on exit
shopt -s interactive_comments	# do ignore command lines starting with #
shopt -u lastpipe		# don't run last pipe cmd in current shell
shopt -s lithist		#*do save multi-line commands with newlines
#shopt -u login_shell		# Is this a login shell READ-ONLY
shopt -u mailwarn		# don't check mail file for access times
shopt -u no_empty_cmd_completion # do search PATH for ALL commands
shopt -u nocaseglob		# don't use case-insensitive pathname expansion
shopt -u nocasematch		# don't use case-insensitive matching: case [[
shopt -u nullglob		# do return glob if no match found
shopt -s progcomp		# do programmable completion
shopt -s promptvars		# do prompt string expansion
#shopt -u restricted_shell	# Is shell in restricted mode READ-ONLY
shopt -u shift_verbose		# don't print err message on 'shift' errors
shopt -s sourcepath		# do use PATH to find 'source'd files
shopt -u xpg_echo		# don't auto-expand echo escape sequences
##############################################################################
#abort", rl_abort },
#accept-line", rl_newline },
#arrow-key-prefix", rl_arrow_keys },
#backward-byte", rl_backward_byte },
#backward-char", rl_backward_char },
#backward-delete-char", rl_rubout },
#backward-kill-line", rl_backward_kill_line },
#backward-kill-word", rl_backward_kill_word },
#backward-word", rl_backward_word },
#beginning-of-history", rl_beginning_of_history },
#beginning-of-line", rl_beg_of_line },
#call-last-kbd-macro", rl_call_last_kbd_macro },
#capitalize-word", rl_capitalize_word },
#character-search", rl_char_search },
#character-search-backward", rl_backward_char_search },
#clear-screen", rl_clear_screen },
#complete", rl_complete },
#copy-backward-word", rl_copy_backward_word },
#copy-forward-word", rl_copy_forward_word },
#copy-region-as-kill", rl_copy_region_to_kill },
#delete-char", rl_delete },
#delete-char-or-list", rl_delete_or_show_completions },
#delete-horizontal-space", rl_delete_horizontal_space },
#digit-argument", rl_digit_argument },
#do-lowercase-version", rl_do_lowercase_version },
#downcase-word", rl_downcase_word },
#dump-functions", rl_dump_functions },
#dump-macros", rl_dump_macros },
#dump-variables", rl_dump_variables },
#emacs-editing-mode", rl_emacs_editing_mode },
#end-kbd-macro", rl_end_kbd_macro },
#end-of-history", rl_end_of_history },
#end-of-line", rl_end_of_line },
#exchange-point-and-mark", rl_exchange_point_and_mark },
#forward-backward-delete-char", rl_rubout_or_delete },
#forward-byte", rl_forward_byte },
#forward-char", rl_forward_char },
#forward-search-history", rl_forward_search_history },
#forward-word", rl_forward_word },
#history-search-backward", rl_history_search_backward },
#history-search-forward", rl_history_search_forward },
#insert-comment", rl_insert_comment },
#insert-completions", rl_insert_completions },
#kill-whole-line", rl_kill_full_line },
#kill-line", rl_kill_line },
#kill-region", rl_kill_region },
#kill-word", rl_kill_word },
#menu-complete", rl_menu_complete },
#menu-complete-backward", rl_backward_menu_complete },
#next-history", rl_get_next_history },
#non-incremental-forward-search-history", rl_noninc_forward_search },
#non-incremental-reverse-search-history", rl_noninc_reverse_search },
#non-incremental-forward-search-history-again", rl_noninc_forward_search_again },
#non-incremental-reverse-search-history-again", rl_noninc_reverse_search_again },
#old-menu-complete", rl_old_menu_complete },
#overwrite-mode", rl_overwrite_mode },
#paste-from-clipboard", rl_paste_from_clipboard },
#possible-completions", rl_possible_completions },
#previous-history", rl_get_previous_history },
#quoted-insert", rl_quoted_insert },
#re-read-init-file", rl_re_read_init_file },
#redraw-current-line", rl_refresh_line},
#reverse-search-history", rl_reverse_search_history },
#revert-line", rl_revert_line },
#self-insert", rl_insert },
#set-mark", rl_set_mark },
#skip-csi-sequence", rl_skip_csi_sequence },
#start-kbd-macro", rl_start_kbd_macro },
#tab-insert", rl_tab_insert },
#tilde-expand", rl_tilde_expand },
#transpose-chars", rl_transpose_chars },
#transpose-words", rl_transpose_words },
#tty-status", rl_tty_status },
#undo", rl_undo_command },
#universal-argument", rl_universal_argument },
#unix-filename-rubout", rl_unix_filename_rubout },
#unix-line-discard", rl_unix_line_discard },
#unix-word-rubout", rl_unix_word_rubout },
#upcase-word", rl_upcase_word },
#yank", rl_yank },
#yank-last-arg", rl_yank_last_arg },
#yank-nth-arg", rl_yank_nth_arg },
#yank-pop", rl_yank_pop },
#vi-append-eol", rl_vi_append_eol },
#vi-append-mode", rl_vi_append_mode },
#vi-arg-digit", rl_vi_arg_digit },
#vi-back-to-indent", rl_vi_back_to_indent },
#vi-backward-bigword", rl_vi_bWord },
#vi-backward-word", rl_vi_bword },
#vi-bWord", rl_vi_bWord },
#vi-bword", rl_vi_bword },
#vi-change-case", rl_vi_change_case },
#vi-change-char", rl_vi_change_char },
#vi-change-to", rl_vi_change_to },
#vi-char-search", rl_vi_char_search },
#vi-column", rl_vi_column },
#vi-complete", rl_vi_complete },
#vi-delete", rl_vi_delete },
#vi-delete-to", rl_vi_delete_to },
#vi-eWord", rl_vi_eWord },
#vi-editing-mode", rl_vi_editing_mode },
#vi-end-bigword", rl_vi_eWord },
#vi-end-word", rl_vi_end_word },
#vi-eof-maybe", rl_vi_eof_maybe },
#vi-eword", rl_vi_eword },
#vi-fWord", rl_vi_fWord },
#vi-fetch-history", rl_vi_fetch_history },
#vi-first-print", rl_vi_first_print },
#vi-forward-bigword", rl_vi_fWord },
#vi-forward-word", rl_vi_fword },
#vi-fword", rl_vi_fword },
#vi-goto-mark", rl_vi_goto_mark },
#vi-insert-beg", rl_vi_insert_beg },
#vi-insertion-mode", rl_vi_insertion_mode },
#vi-match", rl_vi_match },
#vi-movement-mode", rl_vi_movement_mode },
#vi-next-word", rl_vi_next_word },
#vi-overstrike", rl_vi_overstrike },
#vi-overstrike-delete", rl_vi_overstrike_delete },
#vi-prev-word", rl_vi_prev_word },
#vi-put", rl_vi_put },
#vi-redo", rl_vi_redo },
#vi-replace", rl_vi_replace },
#vi-rubout", rl_vi_rubout },
#vi-search", rl_vi_search },
#vi-search-again", rl_vi_search_again },
#vi-set-mark", rl_vi_set_mark },
#vi-subst", rl_vi_subst },
#vi-tilde-expand", rl_vi_tilde_expand },
#vi-yank-arg", rl_vi_yank_arg },
#vi-yank-to", rl_vi_yank_to },
#
#KEYMAP_ENTRY_ARRAY vi_movement_keymap = {
#  /* The regular control keys come first. */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-@ */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-a */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-b */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-c */
#  { ISFUNC, rl_vi_eof_maybe },			/* Control-d */
#  { ISFUNC, rl_emacs_editing_mode },		/* Control-e */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-f */
#  { ISFUNC, rl_abort },				/* Control-g */
#  { ISFUNC, rl_backward_char },			/* Control-h */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-i */
#  { ISFUNC, rl_newline },			/* Control-j */
#  { ISFUNC, rl_kill_line },			/* Control-k */
#  { ISFUNC, rl_clear_screen },			/* Control-l */
#  { ISFUNC, rl_newline },			/* Control-m */
#  { ISFUNC, rl_get_next_history },		/* Control-n */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-o */
#  { ISFUNC, rl_get_previous_history },		/* Control-p */
#  { ISFUNC, rl_quoted_insert },			/* Control-q */
#  { ISFUNC, rl_reverse_search_history },	/* Control-r */
#  { ISFUNC, rl_forward_search_history },	/* Control-s */
#  { ISFUNC, rl_transpose_chars },		/* Control-t */
#  { ISFUNC, rl_unix_line_discard },		/* Control-u */
#  { ISFUNC, rl_quoted_insert },			/* Control-v */
#  { ISFUNC, rl_unix_word_rubout },		/* Control-w */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-x */
#  { ISFUNC, rl_yank },				/* Control-y */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-z */
#
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-[ */	/* vi_escape_keymap */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-\ */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-] */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-^ */
#  { ISFUNC, rl_vi_undo },			/* Control-_ */
#
#  /* The start of printing characters. */
#  { ISFUNC, rl_forward_char },			/* SPACE */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* ! */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* " */
#  { ISFUNC, rl_insert_comment },		/* # */
#  { ISFUNC, rl_end_of_line },			/* $ */
#  { ISFUNC, rl_vi_match },			/* % */
#  { ISFUNC, rl_vi_tilde_expand },		/* & */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* ' */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* ( */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* ) */
#  { ISFUNC, rl_vi_complete },			/* * */
#  { ISFUNC, rl_get_next_history},		/* + */
#  { ISFUNC, rl_vi_char_search },		/* , */
#  { ISFUNC, rl_get_previous_history },		/* - */
#  { ISFUNC, rl_vi_redo },			/* . */
#  { ISFUNC, rl_vi_search },			/* / */
#
#  /* Regular digits. */
#  { ISFUNC, rl_beg_of_line },			/* 0 */
#  { ISFUNC, rl_vi_arg_digit },			/* 1 */
#  { ISFUNC, rl_vi_arg_digit },			/* 2 */
#  { ISFUNC, rl_vi_arg_digit },			/* 3 */
#  { ISFUNC, rl_vi_arg_digit },			/* 4 */
#  { ISFUNC, rl_vi_arg_digit },			/* 5 */
#  { ISFUNC, rl_vi_arg_digit },			/* 6 */
#  { ISFUNC, rl_vi_arg_digit },			/* 7 */
#  { ISFUNC, rl_vi_arg_digit },			/* 8 */
#  { ISFUNC, rl_vi_arg_digit },			/* 9 */
#
#  /* A little more punctuation. */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* : */
#  { ISFUNC, rl_vi_char_search },		/* ; */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* < */
#  { ISFUNC, rl_vi_complete },			/* = */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* > */
#  { ISFUNC, rl_vi_search },			/* ? */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* @ */
#
#  /* Uppercase alphabet. */
#  { ISFUNC, rl_vi_append_eol },			/* A */
#  { ISFUNC, rl_vi_prev_word},			/* B */
#  { ISFUNC, rl_vi_change_to },			/* C */
#  { ISFUNC, rl_vi_delete_to },			/* D */
#  { ISFUNC, rl_vi_end_word },			/* E */
#  { ISFUNC, rl_vi_char_search },		/* F */
#  { ISFUNC, rl_vi_fetch_history },		/* G */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* H */
#  { ISFUNC, rl_vi_insert_beg },			/* I */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* J */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* K */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* L */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* M */
#  { ISFUNC, rl_vi_search_again },		/* N */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* O */
#  { ISFUNC, rl_vi_put },			/* P */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Q */
#  { ISFUNC, rl_vi_replace },			/* R */
#  { ISFUNC, rl_vi_subst },			/* S */
#  { ISFUNC, rl_vi_char_search },		/* T */
#  { ISFUNC, rl_revert_line },			/* U */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* V */
#  { ISFUNC, rl_vi_next_word },			/* W */
#  { ISFUNC, rl_vi_rubout },			/* X */
#  { ISFUNC, rl_vi_yank_to },			/* Y */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Z */
#
#  /* Some more punctuation. */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* [ */
#  { ISFUNC, rl_vi_complete },			/* \ */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* ] */
#  { ISFUNC, rl_vi_first_print },		/* ^ */
#  { ISFUNC, rl_vi_yank_arg },			/* _ */
#  { ISFUNC, rl_vi_goto_mark },			/* ` */
#
#  /* Lowercase alphabet. */
#  { ISFUNC, rl_vi_append_mode },		/* a */
#  { ISFUNC, rl_vi_prev_word },			/* b */
#  { ISFUNC, rl_vi_change_to },			/* c */
#  { ISFUNC, rl_vi_delete_to },			/* d */
#  { ISFUNC, rl_vi_end_word },			/* e */
#  { ISFUNC, rl_vi_char_search },		/* f */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* g */
#  { ISFUNC, rl_backward_char },			/* h */
#  { ISFUNC, rl_vi_insert_mode },		/* i */
#  { ISFUNC, rl_get_next_history },		/* j */
#  { ISFUNC, rl_get_previous_history },		/* k */
#  { ISFUNC, rl_forward_char },			/* l */
#  { ISFUNC, rl_vi_set_mark },			/* m */
#  { ISFUNC, rl_vi_search_again },		/* n */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* o */
#  { ISFUNC, rl_vi_put },			/* p */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* q */
#  { ISFUNC, rl_vi_change_char },		/* r */
#  { ISFUNC, rl_vi_subst },			/* s */
#  { ISFUNC, rl_vi_char_search },		/* t */
#  { ISFUNC, rl_vi_undo },			/* u */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* v */
#  { ISFUNC, rl_vi_next_word },			/* w */
#  { ISFUNC, rl_vi_delete },			/* x */
#  { ISFUNC, rl_vi_yank_to },			/* y */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* z */
#
#  /* Final punctuation. */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* { */
#  { ISFUNC, rl_vi_column },			/* | */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* } */
#  { ISFUNC, rl_vi_change_case },		/* ~ */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* RUBOUT */
##################
#KEYMAP_ENTRY_ARRAY vi_insertion_keymap = {
#  /* The regular control keys come first. */
#  { ISFUNC, (rl_command_func_t *)0x0 },		/* Control-@ */
#  { ISFUNC, rl_insert },			/* Control-a */
#  { ISFUNC, rl_insert },			/* Control-b */
#  { ISFUNC, rl_insert },			/* Control-c */
#  { ISFUNC, rl_vi_eof_maybe },			/* Control-d */
#  { ISFUNC, rl_insert },			/* Control-e */
#  { ISFUNC, rl_insert },			/* Control-f */
#  { ISFUNC, rl_insert },			/* Control-g */
#  { ISFUNC, rl_rubout },			/* Control-h */
#  { ISFUNC, rl_complete },			/* Control-i */
#  { ISFUNC, rl_newline },			/* Control-j */
#  { ISFUNC, rl_insert },			/* Control-k */
#  { ISFUNC, rl_insert },			/* Control-l */
#  { ISFUNC, rl_newline },			/* Control-m */
#  { ISFUNC, rl_menu_complete},			/* Control-n */
#  { ISFUNC, rl_insert },			/* Control-o */
#  { ISFUNC, rl_backward_menu_complete },	/* Control-p */
#  { ISFUNC, rl_insert },			/* Control-q */
#  { ISFUNC, rl_reverse_search_history },	/* Control-r */
#  { ISFUNC, rl_forward_search_history },	/* Control-s */
#  { ISFUNC, rl_transpose_chars },		/* Control-t */
#  { ISFUNC, rl_unix_line_discard },		/* Control-u */
#  { ISFUNC, rl_quoted_insert },			/* Control-v */
#  { ISFUNC, rl_unix_word_rubout },		/* Control-w */
#  { ISFUNC, rl_insert },			/* Control-x */
#  { ISFUNC, rl_yank },				/* Control-y */
#  { ISFUNC, rl_insert },			/* Control-z */
#
#  { ISFUNC, rl_vi_movement_mode },		/* Control-[ */
#  { ISFUNC, rl_insert },			/* Control-\ */
#  { ISFUNC, rl_insert },			/* Control-] */
#  { ISFUNC, rl_insert },			/* Control-^ */
#  { ISFUNC, rl_vi_undo },			/* Control-_ */
#
#  /* The start of printing characters. */
#  { ISFUNC, rl_insert },			/* SPACE */
#  { ISFUNC, rl_insert },			/* ! */
#  { ISFUNC, rl_insert },			/* " */
#  { ISFUNC, rl_insert },			/* # */
#  { ISFUNC, rl_insert },			/* $ */
#  { ISFUNC, rl_insert },			/* % */
#  { ISFUNC, rl_insert },			/* & */
#  { ISFUNC, rl_insert },			/* ' */
#  { ISFUNC, rl_insert },			/* ( */
#  { ISFUNC, rl_insert },			/* ) */
#  { ISFUNC, rl_insert },			/* * */
#  { ISFUNC, rl_insert },			/* + */
#  { ISFUNC, rl_insert },			/* , */
#  { ISFUNC, rl_insert },			/* - */
#  { ISFUNC, rl_insert },			/* . */
#  { ISFUNC, rl_insert },			/* / */
#
#  /* Regular digits. */
#  { ISFUNC, rl_insert },			/* 0 */
#  { ISFUNC, rl_insert },			/* 1 */
#  { ISFUNC, rl_insert },			/* 2 */
#  { ISFUNC, rl_insert },			/* 3 */
#  { ISFUNC, rl_insert },			/* 4 */
#  { ISFUNC, rl_insert },			/* 5 */
#  { ISFUNC, rl_insert },			/* 6 */
#  { ISFUNC, rl_insert },			/* 7 */
#  { ISFUNC, rl_insert },			/* 8 */
#  { ISFUNC, rl_insert },			/* 9 */
#
#  /* A little more punctuation. */
#  { ISFUNC, rl_insert },			/* : */
#  { ISFUNC, rl_insert },			/* ; */
#  { ISFUNC, rl_insert },			/* < */
#  { ISFUNC, rl_insert },			/* = */
#  { ISFUNC, rl_insert },			/* > */
#  { ISFUNC, rl_insert },			/* ? */
#  { ISFUNC, rl_insert },			/* @ */
#
#  /* Uppercase alphabet. */
#  { ISFUNC, rl_insert },			/* A */
#  { ISFUNC, rl_insert },			/* B */
#  { ISFUNC, rl_insert },			/* C */
#  { ISFUNC, rl_insert },			/* D */
#  { ISFUNC, rl_insert },			/* E */
#  { ISFUNC, rl_insert },			/* F */
#  { ISFUNC, rl_insert },			/* G */
#  { ISFUNC, rl_insert },			/* H */
#  { ISFUNC, rl_insert },			/* I */
#  { ISFUNC, rl_insert },			/* J */
#  { ISFUNC, rl_insert },			/* K */
#  { ISFUNC, rl_insert },			/* L */
#  { ISFUNC, rl_insert },			/* M */
#  { ISFUNC, rl_insert },			/* N */
#  { ISFUNC, rl_insert },			/* O */
#  { ISFUNC, rl_insert },			/* P */
#  { ISFUNC, rl_insert },			/* Q */
#  { ISFUNC, rl_insert },			/* R */
#  { ISFUNC, rl_insert },			/* S */
#  { ISFUNC, rl_insert },			/* T */
#  { ISFUNC, rl_insert },			/* U */
#  { ISFUNC, rl_insert },			/* V */
#  { ISFUNC, rl_insert },			/* W */
#  { ISFUNC, rl_insert },			/* X */
#  { ISFUNC, rl_insert },			/* Y */
#  { ISFUNC, rl_insert },			/* Z */
#
#  /* Some more punctuation. */
#  { ISFUNC, rl_insert },			/* [ */
#  { ISFUNC, rl_insert },			/* \ */
#  { ISFUNC, rl_insert },			/* ] */
#  { ISFUNC, rl_insert },			/* ^ */
#  { ISFUNC, rl_insert },			/* _ */
#  { ISFUNC, rl_insert },			/* ` */
#
#  /* Lowercase alphabet. */
#  { ISFUNC, rl_insert },			/* a */
#  { ISFUNC, rl_insert },			/* b */
#  { ISFUNC, rl_insert },			/* c */
#  { ISFUNC, rl_insert },			/* d */
#  { ISFUNC, rl_insert },			/* e */
#  { ISFUNC, rl_insert },			/* f */
#  { ISFUNC, rl_insert },			/* g */
#  { ISFUNC, rl_insert },			/* h */
#  { ISFUNC, rl_insert },			/* i */
#  { ISFUNC, rl_insert },			/* j */
#  { ISFUNC, rl_insert },			/* k */
#  { ISFUNC, rl_insert },			/* l */
#  { ISFUNC, rl_insert },			/* m */
#  { ISFUNC, rl_insert },			/* n */
#  { ISFUNC, rl_insert },			/* o */
#  { ISFUNC, rl_insert },			/* p */
#  { ISFUNC, rl_insert },			/* q */
#  { ISFUNC, rl_insert },			/* r */
#  { ISFUNC, rl_insert },			/* s */
#  { ISFUNC, rl_insert },			/* t */
#  { ISFUNC, rl_insert },			/* u */
#  { ISFUNC, rl_insert },			/* v */
#  { ISFUNC, rl_insert },			/* w */
#  { ISFUNC, rl_insert },			/* x */
#  { ISFUNC, rl_insert },			/* y */
#  { ISFUNC, rl_insert },			/* z */
#
#  /* Final punctuation. */
#  { ISFUNC, rl_insert },			/* { */
#  { ISFUNC, rl_insert },			/* | */
#  { ISFUNC, rl_insert },			/* } */
#  { ISFUNC, rl_insert },			/* ~ */
#  { ISFUNC, rl_rubout },			/* RUBOUT */
##############################################################################
